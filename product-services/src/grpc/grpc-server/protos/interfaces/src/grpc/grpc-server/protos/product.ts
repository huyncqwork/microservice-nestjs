// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.176.2
//   protoc               v3.20.3
// source: src/grpc/grpc-server/protos/product.proto

/* eslint-disable */
import { Metadata } from '@grpc/grpc-js';
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';

export const protobufPackage = 'product';

export interface ProductRequest {
  id: number;
}

export interface ProductResponse {
  id: number;
  images: string;
  name_product: string;
  price: number;
  description: string;
  status: boolean;
}

export const PRODUCT_PACKAGE_NAME = 'product';

export interface GrpcProductServiceClient {
  getProduct(
    request: ProductRequest,
    metadata?: Metadata,
  ): Promise<ProductResponse>;
}

export interface GrpcProductServiceController {
  getProduct(
    request: ProductRequest,
    metadata?: Metadata,
  ): Promise<ProductResponse>;
}

export function GrpcProductServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['getProduct'];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcMethod('GrpcProductService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcStreamMethod('GrpcProductService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
  };
}

export const GRPC_PRODUCT_SERVICE_NAME = 'GrpcProductService';
